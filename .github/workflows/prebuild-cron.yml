name: Refresh NuGet libraries (windows)

env:
  VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"

on:
  schedule:
    - cron: "30 5,12,18 * * *"

jobs:
  build:
    strategy:
      matrix:
        label:
          [
            "ubuntu-20.04-x64",
            "windows-2019-x64",
            "windows-2019-x86",
            "windows-2022-x64",
            "windows-2022-x86",
            "macos-11-x64",
          ]
        include:
          - label: "ubuntu-20.04-x64"
            os: "ubuntu-20.04"
            triplet: "x64-linux"
            mono: "mono"
            sudo: "sudo"
            cmake_config_options: ""
          - label: "windows-2019-x64"
            os: "windows-2019"
            triplet: "x64-windows"
            mono: ""
            sudo: ""
            cmake_config_options: '-G "Visual Studio 16 2019" -T host=x64 -A x64'
          - label: "windows-2019-x86"
            os: "windows-2019"
            triplet: "x86-windows"
            mono: ""
            sudo: ""
            cmake_config_options: '-G "Visual Studio 16 2019" -T host=x86 -A x86'
          - label: "windows-2022-x64"
            os: "windows-2022"
            triplet: "x64-windows"
            mono: ""
            sudo: ""
            cmake_config_options: '-G "Visual Studio 17 2022" -T host=x64 -A x64'
          - label: "windows-2022-x86"
            os: "windows-2022"
            triplet: "x86-windows"
            mono: ""
            sudo: ""
            cmake_config_options: '-G "Visual Studio 17 2022" -T host=x86 -A x86'
          - label: "macos-11-x64"
            os: "macos-11"
            triplet: "x64-osx"
            mono: "mono"
            sudo: "sudo"
            cmake_config_options: ""
      fail-fast: false

    runs-on: ${{ matrix.os }}
    steps:
      - name: Ubuntu Dependencies
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        shell: "bash"
        run: |
          sudo apt-get update -y
          sudo apt-get -yq install build-essential binutils-dev pkg-config libtool autotools-dev automake

      - name: OSX Dependencies
        if: ${{ matrix.os == 'macos-11' }}
        shell: "bash"
        run: |
          brew install pkg-config automake libtool

      - name: "Remove builtin vcpkg (old)"
        working-directory: .
        shell: "bash"
        run: |
          ${{ matrix.sudo }} rm -rf "$VCPKG_INSTALLATION_ROOT"

      - name: Check out source code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: "Bootstrap vcpkg"
        working-directory: .
        shell: "bash"
        run: |
          ./bootstrap-vcpkg.sh

      - name: "Setup NuGet Credentials"
        working-directory: .
        shell: "bash"
        run: |
          ${{ matrix.mono }} `./vcpkg fetch nuget | tail -n 1` \
            sources add \
            -source "https://nuget.pkg.github.com/hpcc-systems/index.json" \
            -storepasswordincleartext \
            -name "GitHub" \
            -username "hpcc-systems" \
            -password "${{ secrets.GITHUB_TOKEN }}"
          ${{ matrix.mono }} `./vcpkg fetch nuget | tail -n 1` \
            setapikey "${{ secrets.GITHUB_TOKEN }}" \
            -source "https://nuget.pkg.github.com/hpcc-systems/index.json"

      - name: "vcpkg package refresh"
        working-directory: .
        shell: "bash"
        run: |
          ./vcpkg install --keep-going --triplet ${{ matrix.triplet }}
