name: Refresh docker NuGet cache

on:
  push:
    branches:
      - "hpcc-platform-8.12.x"
      - "TEST"

  workflow_dispatch:
    inputs:
      image:
        description: "Image"
        required: true
        default: "all"
        type: choice
        options:
          - "all"

jobs:
  build-images:
    strategy:
      matrix:
        image:
          [
            "ubuntu-22.10",
            "ubuntu-22.04",
            "ubuntu-20.04",
            "ubuntu-18.04",
            "centos-8",
            "centos-7",
            "amazonlinux",
          ]
      fail-fast: false

    name: "Docker:  ${{ matrix.image }}"
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Set vars
        id: vars
        run: echo "sha_short=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build ${{ matrix.os }} image
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          file: dockerfiles/${{ matrix.image }}.dockerfile
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/vcpkg-${{ matrix.image }}:${{ steps.vars.outputs.sha_short }}
            ${{ secrets.DOCKER_USERNAME }}/vcpkg-${{ matrix.image }}:8.12-rc2
            ${{ secrets.DOCKER_USERNAME }}/vcpkg-${{ matrix.image }}:latest
            hpccsystems/platform-build-base-${{ matrix.image }}:${{ steps.vars.outputs.sha_short }}
            hpccsystems/platform-build-base-${{ matrix.image }}:8.12-rc2
            hpccsystems/platform-build-base-${{ matrix.image }}:latest
          build-args: |
            NUGET_MODE=readwrite
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
