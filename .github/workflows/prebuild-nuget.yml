name: Refresh NuGet cache

env:
  VCPKG_BINARY_SOURCES: "clear;nuget,GitHub,readwrite"

on:
  pull_request:
    branches:
      - "hpcc-platform-8.8.x"

  workflow_dispatch:
    inputs:
      os:
        description: "OS"
        required: true
        default: "all"
        type: choice
        options:
          - "all"

jobs:
  build:
    strategy:
      matrix:
        branch: ["8.8.x"]
        label:
          [
            "ubuntu-18.04-x64",
            "ubuntu-20.04-x64",
            "ubuntu-22.04-x64",
            "windows-2019-x64",
            "windows-2019-x86",
            "windows-2022-x64",
            "windows-2022-x86",
            "macos-11-x64",
            "macos-12-x64",
          ]
        include:
          - label: "ubuntu-18.04-x64"
            os: "ubuntu-18.04"
            triplet: "x64-linux"
            mono: "mono"
            sudo: "sudo"
            logs: "/usr/local/share/vcpkg"
          - label: "ubuntu-20.04-x64"
            os: "ubuntu-20.04"
            triplet: "x64-linux"
            mono: "mono"
            sudo: "sudo"
            logs: "/usr/local/share/vcpkg"
          - label: "ubuntu-22.04-x64"
            os: "ubuntu-22.04"
            triplet: "x64-linux"
            mono: "mono"
            sudo: "sudo"
            logs: "/usr/local/share/vcpkg"
          - label: "windows-2019-x64"
            os: "windows-2019"
            triplet: "x64-windows"
            mono: ""
            sudo: ""
            logs: "C:/vcpkg"
          - label: "windows-2019-x86"
            os: "windows-2019"
            triplet: "x86-windows"
            mono: ""
            sudo: ""
            logs: "C:/vcpkg"
          - label: "windows-2022-x64"
            os: "windows-2022"
            triplet: "x64-windows"
            mono: ""
            sudo: ""
            logs: "C:/vcpkg"
          - label: "windows-2022-x86"
            os: "windows-2022"
            triplet: "x86-windows"
            mono: ""
            sudo: ""
            logs: "C:/vcpkg"
          - label: "macos-11-x64"
            os: "macos-11"
            triplet: "x64-osx"
            mono: "mono"
            sudo: "sudo"
            logs: "/usr/local/share/vcpkg"
          - label: "macos-12-x64"
            os: "macos-12"
            triplet: "x64-osx"
            mono: "mono"
            sudo: "sudo"
            logs: "/usr/local/share/vcpkg"
      fail-fast: false

    name: "${{ matrix.label }} - ${{ matrix.branch }}"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Ubuntu Dependencies
        if: ${{ matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04' }}
        shell: "bash"
        run: |
          sudo apt-get update -y
          sudo apt-get -yq install build-essential binutils-dev pkg-config libtool autotools-dev automake

      - name: OSX Dependencies
        if: ${{ matrix.os == 'macos-11' || matrix.os == 'macos-12'}}
        shell: "bash"
        run: |
          brew install pkg-config automake libtool

      - name: "Setup NuGet Credentials"
        shell: "bash"
        run: |
          ${{ matrix.mono }} `vcpkg fetch nuget | tail -n 1` \
            sources add \
            -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            -storepasswordincleartext \
            -name "GitHub" \
            -username "${{ github.repository_owner }}" \
            -password "${{ secrets.GITHUB_TOKEN }}"
          ${{ matrix.mono }} `vcpkg fetch nuget | tail -n 1` \
            setapikey "${{ secrets.GITHUB_TOKEN }}" \
            -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: "Remove builtin vcpkg (old)"
        shell: "bash"
        run: |
          ${{ matrix.sudo }} rm -rf "$VCPKG_INSTALLATION_ROOT"

      - name: Check out source code
        uses: actions/checkout@v3
        with:
          ref: hpcc-platform-${{ matrix.branch }}
          submodules: recursive

      - name: "Bootstrap vcpkg"
        shell: "bash"
        run: |
          ./bootstrap-vcpkg.sh

      - name: "Update nuget (overlays)"
        shell: "bash"
        run: |
          ./vcpkg install --vcpkg-root=. --overlay-ports=overlays --triplet ${{ matrix.triplet }}

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ${{ matrix.label }}-logs
          path: ${{ matrix.logs }}/buildtrees/*/*.log
